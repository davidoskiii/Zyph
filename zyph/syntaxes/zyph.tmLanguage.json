{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Zyph",
	"scopeName": "source.zyph",
	"patterns": [
	  {
		"include": "#comments"
	  },
	  {
		"include": "#statements"
	  },
	  {
		"include": "#variables"
	  },
	  {
		"include": "#operators"
	  },
	  {
		"include": "#numbers"
	  },
	  {
		"include": "#strings"
	  },
	  {
		"include": "#constants"
	  },
	  {
		"include": "#functions"
	  },
	  {
		"include": "#builtins"
	  }
	],
	"repository": {
	  "comments": {
		"patterns": [
		  {
			"name": "comment.line.double-slash",
			"match": "//.*"
		  }
		]
	  },
	  "statements": {
		"patterns": [
		  {
			"name": "keyword.control",
			"match": "\\b(?:if|elif|else|for|while|continue|break|return|var|function|to|step|try|catch|import)\\b"
		  },
		  {
			"captures": {
			  "1": {
				"name": "entity.name.function"
			  }
			},
			"match": "\\b(?:function\\s+)?([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\([^)]*\\)\\s*\\{"
		  },
		  {
			"name": "variable.other",
			"match": "\\bvar\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*="
		  },
		  {
			"name": "variable.other",
			"match": "\\bvar\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*$"
		  },
		  {
			"name": "entity.name.function",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
		  },
		  {
			"name": "variable.other",
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
		  }
		]
	  },
	  "variables": {
		"patterns": [
		  {
			"name": "variable.other",
			"match": "\\b(?:var\\s+)?([a-zA-Z_][a-zA-Z0-9_]*)\\s*="
		  },
		  {
			"name": "variable.other",
			"match": "\\b(?:var\\s+)?([a-zA-Z_][a-zA-Z0-9_]*)\\s*$"
		  }
		]
	  },
	  "functions": {
		"patterns": [
		  {
			"name": "entity.name.function",
			"match": "\\bfunction\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b"
		  }
		]
	  },
	  "operators": {
		"patterns": [
		  {
			"name": "keyword.operator",
			"match": "\\b(?:<=|>=|==|!=|and|not|or|<|>)\\b"
		  }
		]
	  },
	  "numbers": {
		"patterns": [
		  {
			"name": "constant.numeric",
			"match": "\\b\\d+\\b"
		  }
		]
	  },
	  "strings": {
		"patterns": [
		  {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\""
		  }
		]
	  },
	  "constants": {
		"patterns": [
		  {
			"name": "constant.language",
			"match": "\\b(?:true|false|null)\\b"
		  }
		]
	  },
	  "builtins": {
		"patterns": [
		  {
			"name": "support.function",
			"match": "\\b(?:print|print_ret|input|input_int|clear|cls|is_num|is_str|is_list|is_function|append|pop|extend|sort|len|count|str|num|int|float|abs|min|max|range|factorial|raise_error|randfloat|randint|run|quit)\\b"
		  }
		]
	  }
	}
  }
  